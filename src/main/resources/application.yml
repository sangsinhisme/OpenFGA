application:
  id: ${APP_ID}

quarkus:
  management:
    enabled: ${ENABLE_QUARKUS_MANAGEMENT}
    port: 9000
    proxy:
      allow-forwarded: true
      allow-x-forwarded: true
      enable-forwarded-host: true
      enable-forwarded-prefix: true
  banner:
    path: banner.txt
  devservices:
    enabled: false
  log:
    level: INFO
    console:
      format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"

    category:
      "org.jboss.resteasy.reactive.client.logging":
        level: DEBUG
  #      "org.hibernate":
  #        level: DEBUG
  #      "org.hibernate.SQL":
  #        level: DEBUG

  datasource:
    db-kind: ${DEMO_DB_KIND}
    username: ${DEMO_USERNAME}
    password: ${DEMO_PASSWORD}
    jdbc: false
    reactive:
      url: vertx-reactive:${DEMO_DB_KIND}://${DEMO_HOST}:${DEMO_PORT}/${DEMO_DB}?currentSchema=${DEMO_SCHEMA}&prepareThreshold=0
      max-size: 16

    demo:
      db-kind: ${DEMO_DB_KIND}
      username: ${DEMO_USERNAME}
      password: ${DEMO_PASSWORD}
      jdbc: false
      reactive:
        url: vertx-reactive:${DEMO_DB_KIND}://${DEMO_HOST}:${DEMO_PORT}/${DEMO_DB}?currentSchema=${DEMO_SCHEMA}&prepareThreshold=0
        max-size: 16

  hibernate-orm:
    database:
      default-schema: ${DEMO_SCHEMA}
      generation: create-drop
    sql-load-script: no-file

  http:
    cors:
      ~: true
      origins: "*"
      methods: GET, OPTIONS, POST, PUT, DELETE, PATCH
      headers: accept, authorization, content-type, x-requested-with, X-Current-Org-Id

  redis:
    hosts: ${REDIS_KIND_CONNECT}://${REDIS_HOST}:${REDIS_PORT}
    database: ${REDIS_DATABASE_INDEX}
    timeout: ${REDIS_CONNECTION_TIMEOUT}

    demo:
      hosts: ${REDIS_KIND_CONNECT}://${REDIS_HOST}:${REDIS_PORT}
      timeout: ${REDIS_CONNECTION_TIMEOUT}

  rest-client:
    logging:
      scope: request-response
    "vn.ftel.perm.services.OpenFGAService":
        url: ${OPEN_FGA_SERVICE_URL}
        scope: ${OPEN_FGA_SERVICE_SCOPE}
    "demo-client":
      url: ${DEMO_CLIENT_URL}
      scope: ${DEMO_CLIENT_SCOPE:jakarta.inject.Singleton}

  micrometer:
    runtime:
      binder:
        HttpBinderConfiguration: true
        http-client:
          enabled: true

  tls:
    trust-all: true

  smallrye-openapi:
    info-title: Permission Service
    info-version: 1.0.0
    info-description: Permission Service
    info-terms-of-service: Permission Service
    info-license-name: Apache 2.0
    info-license-url: https://www.apache.org/licenses/LICENSE-2.0.html
    security-scheme: jwt
    security-scheme-name: UserToken
    api-key-parameter-in: header
    api-key-parameter-name: authorization
